PROGRAMSTART:
JSR START
0:
10:
NOP
MOVB 646,#1{INTEGER}
NOP
JSR COMPACTMAX
MOV Y,#147{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOVB 53280,#1{INTEGER}
NOP
MOVB 53281,#1{INTEGER}
15:
NOP
JSR COMPACTMAX
MOV Y,#142{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#8{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR GOSUB
JSR 48600
20:
NOP
MOVB 650,#192{INTEGER}
NOP
MOVB 652,#0{INTEGER}
NOP
JSR GOSUB
JSR 48000
NOP
JSR GOSUB
JSR 39900
NOP
JSR GOSUB
JSR 62500
30:
NOP
JSR GOSUB
JSR 49000
NOP
JSR GOSUB
JSR 51000
NOP
MOV Y,#0{INTEGER}
MOV RS%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV OB%{INTEGER},Y
40:
NOP
MOV Y,CP{REAL}
MOV PN{REAL},Y
NOP
JSR GOSUB
JSR 54000
NOP
JSR GOSUB
JSR 55000
60:
NOP
JSR GOSUB
JSR 56000
NOP
JSR GOSUB
JSR 59200
70:
NOP
JSR GOSUB
JSR 62000
80:
NOP
MOV Y,#1{INTEGER}
MOV X,RS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP0
JMP SKIP0
NSKIP0:
NOP
NOP
JSR COMPACTMAX
MOV Y,#147{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JMP 30
NOP
SKIP0:
90:
NOP
MOV Y,#1{INTEGER}
MOV X,CP{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
AND X,Y
MOV CP{REAL},X
100:
NOP
JMP 40
999:
NOP
JSR END
RTS
39400:
NOP
39410:
NOP
MOV Y,#2{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#2{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#4{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#2{INTEGER}
MOV HQ{REAL},Y
39420:
NOP
MOV Y,#128{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#6{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39500:
NOP
39510:
NOP
MOV Y,#7{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#17{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#9{INTEGER}
MOV HQ{REAL},Y
39520:
NOP
MOV Y,#16{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#20{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
39530:
NOP
MOV Y,#9{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#13{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV HQ{REAL},Y
39540:
NOP
MOV Y,#16{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#25{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
39550:
NOP
MOV Y,#10{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#11{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#7{INTEGER}
MOV HQ{REAL},Y
39560:
NOP
MOV Y,#16{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#34{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39600:
NOP
39610:
NOP
MOV Y,#9{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#5{INTEGER}
MOV HQ{REAL},Y
39620:
NOP
MOV Y,#16{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#30{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39650:
NOP
39660:
NOP
MOV Y,#1{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#5{INTEGER}
MOV HQ{REAL},Y
39670:
NOP
MOV Y,#128{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#30{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39750:
NOP
39760:
NOP
MOV Y,#1{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#10{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV HQ{REAL},Y
39770:
NOP
MOV Y,#128{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#30{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39800:
NOP
39810:
NOP
MOV Y,#2{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#3{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#2{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#22{INTEGER}
MOV HQ{REAL},Y
39820:
NOP
MOV Y,#16{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#4{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39850:
NOP
39860:
NOP
MOV Y,#4{INTEGER}
MOV AT{REAL},Y
NOP
MOV Y,#4{INTEGER}
MOV DC{REAL},Y
NOP
MOV Y,#12{INTEGER}
MOV EL{REAL},Y
NOP
MOV Y,#3{INTEGER}
MOV RL{REAL},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ{REAL},Y
NOP
MOV Y,#12{INTEGER}
MOV HQ{REAL},Y
39870:
NOP
MOV Y,#16{INTEGER}
MOV WF{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV PT{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV IM{REAL},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
39900:
NOP
39905:
NOP
MOV Y,#0{INTEGER}
MOV VC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV AC{REAL},Y
39910:
NOP
NOP
MOV Y,#54272.0{REAL}
MOV I{REAL},Y
MOV Y,#54296.0{REAL}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
MOV X,#0{INTEGER}
JSR FASTFOR
CMP A,#0{INTEGER}
JE ($JUMP)
39920:
NOP
MOVB 54296,#15{INTEGER}
NOP
JMP RETURN
40000:
NOP
40005:
NOP
MOV Y,#0{INTEGER}
MOV IC{REAL},Y
NOP
JSR GOSUB
JSR 42000
40010:
NOP
MOV X,VC{REAL}
MOV G,VW%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP1
JMP SKIP1
NSKIP1:
JMP 40100
NOP
SKIP1:
40020:
NOP
MOV Y,#1{INTEGER}
MOV X,VC{REAL}
ADD X,Y
MOV VC{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,IC{REAL}
ADD X,Y
MOV IC{REAL},X
40030:
NOP
MOV Y,#3{INTEGER}
MOV X,VC{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP2
JMP SKIP2
NSKIP2:
NOP
NOP
MOV Y,#0{INTEGER}
MOV VC{REAL},Y
SKIP2:
40040:
NOP
MOV Y,#3{INTEGER}
MOV X,IC{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP3
JMP SKIP3
NSKIP3:
JMP RETURN
NOP
SKIP3:
40050:
NOP
JMP 40010
40100:
NOP
MOV Y,TI{REAL}
MOV TT{REAL},Y
NOP
MOV Y,#7{INTEGER}
MOV X,VC{REAL}
MUL X,Y
MOV Y,#54272.0{REAL}
ADD X,Y
MOV SB{REAL},X
40110:
NOP
MOV Y,#5{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV A,#4{INTEGER}
MOV X,AT{REAL}
SHL X,A
MOV Y,DC{REAL}
ADD X,Y
POP Y
MOVB (Y),X
40120:
NOP
MOV Y,#6{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV A,#4{INTEGER}
MOV X,EL{REAL}
SHL X,A
MOV Y,RL{REAL}
ADD X,Y
POP Y
MOVB (Y),X
40130:
NOP
MOV Y,SB{REAL}
PUSH Y
MOV X,LQ{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,#1{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV X,HQ{REAL}
POP Y
MOVB (Y),X
40140:
NOP
MOV Y,VC{REAL}
PUSH Y
NOP
POP X
MOV Y,WF{REAL}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,VC{REAL}
PUSH Y
NOP
POP X
MOV Y,TT{REAL}
MOV G,VL[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#4{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,WF{REAL}
ADD X,Y
POP Y
MOVB (Y),X
40150:
NOP
MOV Y,VC{REAL}
PUSH Y
NOP
POP X
MOV Y,PT{REAL}
MOV G,VT%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
MOV X,AC{REAL}
ADD X,Y
MOV AC{REAL},X
40160:
NOP
MOV Y,#0{INTEGER}
MOV X,IM{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP4
JMP SKIP4
NSKIP4:
JMP RETURN
NOP
SKIP4:
40170:
NOP
MOV Y,TI{REAL}
MOV TT{REAL},Y
NOP
MOV X,VC{REAL}
MOV G,VL[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,TT{REAL}
SUB X,Y
MOV Y,PT{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP5
JMP SKIP5
NSKIP5:
JMP 40170
NOP
SKIP5:
40180:
NOP
MOV Y,#4{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV X,WF{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,VC{REAL}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
MOV X,AC{REAL}
SUB X,Y
MOV AC{REAL},X
40190:
NOP
MOV Y,#1{INTEGER}
MOV X,VC{REAL}
ADD X,Y
MOV VC{REAL},X
NOP
MOV Y,#3{INTEGER}
MOV X,VC{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP6
JMP SKIP6
NSKIP6:
NOP
NOP
MOV Y,#0{INTEGER}
MOV VC{REAL},Y
SKIP6:
40200:
NOP
JMP RETURN
42000:
NOP
42002:
NOP
MOV Y,#0{INTEGER}
MOV X,AC{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP7
JMP SKIP7
NSKIP7:
JMP RETURN
NOP
SKIP7:
42005:
NOP
MOV Y,TI{REAL}
MOV TT{REAL},Y
42010:
NOP
MOV Y,#0{INTEGER}
MOV HH{REAL},Y
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(HH{REAL})
JSR INITFOR
NOP
MOV X,HH{REAL}
MOV G,VT%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV X,HH{REAL}
MOV G,VL[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,TT{REAL}
SUB X,Y
POP Y
LT X,Y
PUSH X
MOV X,HH{REAL}
MOV G,VW%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
EQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP8
JMP SKIP8
NSKIP8:
JMP 42040
NOP
SKIP8:
42020:
NOP
MOV Y,#7{INTEGER}
MOV X,HH{REAL}
MUL X,Y
MOV Y,#54272.0{REAL}
ADD X,Y
MOV Y,#4{INTEGER}
ADD X,Y
PUSH X
MOV X,HH{REAL}
MOV G,VW%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,HH{REAL}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
MOV X,AC{REAL}
SUB X,Y
MOV AC{REAL},X
42040:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
48000:
NOP
48010:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#1{INTEGER}
MOV G,CI%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#15{INTEGER}
MOV G,CI%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#12{INTEGER}
MOV G,CI%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#11{INTEGER}
MOV G,CI%[]{INTEGER}
JSR ARRAYSTORE
48020:
48030:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#126{INTEGER}
MOV G,SC%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#124{INTEGER}
MOV G,SC%[]{INTEGER}
JSR ARRAYSTORE
48040:
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#123{INTEGER}
MOV G,SC%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#108{INTEGER}
MOV G,SC%[]{INTEGER}
JSR ARRAYSTORE
48050:
48060:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#111{INTEGER}
MOV G,CG[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#77{INTEGER}
MOV G,CG[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#103{INTEGER}
MOV G,CG[]{REAL}
JSR ARRAYSTORE
48070:
NOP
JSR COMPACTMAX
MOV Y,#17{INTEGER}
CHGCTX #1
JSR CHR
JSR COPYSTR
MOV DN${STRING},A
NOP
JSR COMPACTMAX
MOV Y,#19{INTEGER}
CHGCTX #1
JSR CHR
JSR COPYSTR
MOV HM${STRING},A
NOP
NOP
48080:
NOP
JSR COMPACTMAX
MOV Y,#157{INTEGER}
CHGCTX #1
JSR CHR
JSR COPYSTR
MOV LF${STRING},A
NOP
JSR COMPACTMAX
MOV B,LF${STRING}
MOV A,LF${STRING}
JSR CONCAT
JSR COPYSTR
MOV LF${STRING},A
NOP
JSR COMPACTMAX
MOV B,LF${STRING}
MOV A,LF${STRING}
JSR CONCAT
JSR COPYSTR
MOV LF${STRING},A
48090:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#3{INTEGER}
MOV G,PC[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#5{INTEGER}
MOV G,PC[]{REAL}
JSR ARRAYSTORE
48092:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#253{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#253{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#254{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#254{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#4{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#255{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
48093:
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#255{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#6{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#254{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#254{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#8{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#253{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
48100:
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#78{INTEGER}
MOV G,CG[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#4{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#111{INTEGER}
MOV G,CG[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
MOV A,#{STRING}
POP X
MOV G,PO$[]{STRING}
JSR ARRAYSTORE
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,PO%[]{INTEGER}
JSR ARRAYSTORE
48110:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#27{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
JSR COMPACTMAX
MOV Y,#29{INTEGER}
CHGCTX #1
JSR CHR
PUSH A
CHGCTX #0
MOV X,#1{INTEGER}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
POP B
JSR CONCAT
JSR COPYSTR
POP X
MOV G,PO$[]{STRING}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
48120:
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#28{INTEGER}
MOV G,PO%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#3.141592{REAL}
MOV PI{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV CP{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV RP{REAL},Y
48130:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,AF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,AF%[]{INTEGER}
JSR ARRAYSTORE
48140:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
MOV A,# human {STRING}
POP X
MOV G,PN$[]{STRING}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV A,# human {STRING}
POP X
MOV G,PN$[]{STRING}
JSR ARRAYSTORE
48150:
NOP
JMP RETURN
48500:
NOP
48510:
NOP
MOV Y,#22{INTEGER}
MOV X,YY{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP9
JMP SKIP9
NSKIP9:
NOP
NOP
MOV Y,#3{INTEGER}
MOV CC{REAL},Y
JMP RETURN
NOP
SKIP9:
48520:
NOP
MOV Y,#18{INTEGER}
MOV X,YY{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP10
JMP SKIP10
NSKIP10:
NOP
NOP
MOV Y,#2{INTEGER}
MOV CC{REAL},Y
JMP RETURN
NOP
SKIP10:
48530:
NOP
MOV Y,#14{INTEGER}
MOV X,YY{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP11
JMP SKIP11
NSKIP11:
NOP
NOP
MOV Y,#1{INTEGER}
MOV CC{REAL},Y
JMP RETURN
NOP
SKIP11:
48540:
NOP
MOV Y,#0{INTEGER}
MOV CC{REAL},Y
NOP
JMP RETURN
48600:
NOP
48610:
NOP
MOV Y,#56334{INTEGER}
MOV A,#254{INTEGER}
JSR PEEKBYTEAND
MOVB 56334,X
NOP
MOV Y,#1{INTEGER}
MOV A,#251{INTEGER}
JSR PEEKBYTEAND
MOVB 1,X
48620:
NOP
MOV Y,#704{INTEGER}
MOV SP{REAL},Y
NOP
MOV Y,#53896{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#7{INTEGER}
MOV X,I{REAL}
ADD X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,SP{REAL}
PUSH Y
MOV Y,I{REAL}
MOVB X,(Y)
POP Y
MOVB (Y),X
NOP
MOV Y,#3{INTEGER}
MOV X,SP{REAL}
ADD X,Y
MOV SP{REAL},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
48630:
NOP
MOV Y,#1{INTEGER}
MOV A,#4{INTEGER}
JSR PEEKBYTEOR
MOVB 1,X
NOP
MOV Y,#56334{INTEGER}
MOV A,#1{INTEGER}
JSR PEEKBYTEOR
MOVB 56334,X
48640:
NOP
MOVB 2040,#11{INTEGER}
NOP
MOVB 53248,#0{INTEGER}
NOP
MOVB 53249,#0{INTEGER}
NOP
MOVB 53269,#1{INTEGER}
48645:
NOP
MOVB 53276,#0{INTEGER}
NOP
MOVB 53287,#1{INTEGER}
48650:
NOP
MOVB 53285,#2{INTEGER}
NOP
MOVB 53286,#10{INTEGER}
48660:
NOP
JSR RESTORE
NOP
MOV Y,#16192{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#16383.0{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR READNUMBER
MOV S{REAL},Y
NOP
MOV Y,I{REAL}
PUSH Y
MOV X,S{REAL}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
48670:
NOP
JSR READNUMBER
MOV PM{REAL},Y
NOP
MOV Y,#-1.0{REAL}
MOV X,PM{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP12
JMP SKIP12
NSKIP12:
JMP 48690
NOP
SKIP12:
48680:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,PM{REAL}
MOV G,PM[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
MOV X,I{REAL}
ADD X,Y
MOV I{REAL},X
NOP
JMP 48670
48690:
NOP
JMP RETURN
49000:
NOP
49020:
NOP
JSR GOSUB
JSR 39600
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#4{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 50000
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
49030:
NOP
MOV Y,#1984{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#2023{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
49040:
NOP
MOV Y,I{REAL}
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#54272{INTEGER}
MOV X,I{REAL}
ADD X,Y
PUSH X
MOV X,#3{INTEGER}
MOV G,CI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
49050:
NOP
MOV A,(I{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
49100:
NOP
JMP RETURN
50000:
NOP
50010:
NOP
MOV Y,#0{INTEGER}
RND X,Y
MOV X{REAL},X
NOP
MOV Y,#233{INTEGER}
MOV SC{REAL},Y
NOP
MOV Y,#223{INTEGER}
MOV EC{REAL},Y
50020:
NOP
MOV Y,#35{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,#2{INTEGER}
ADD X,Y
MOV Y,X
INT X,Y
MOV X{REAL},X
NOP
MOV Y,#8{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV Y,X
MOV X,#18{INTEGER}
SUB X,Y
MOV Y{REAL},X
50030:
NOP
MOV Y,Y{REAL}
MOV A,#5{INTEGER}
MOV X,Y
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV Y,X{REAL}
MOV X,#1024{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV SA{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV SE{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,X{REAL}
ADD X,Y
MOV XE{REAL},X
50035:
NOP
MOV Y,SE{REAL}
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
PUSH X
MOV Y,SA{REAL}
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP13
JMP SKIP13
NSKIP13:
JMP 50020
NOP
SKIP13:
50037:
NOP
MOV Y,Y{REAL}
MOV YY{REAL},Y
NOP
JSR GOSUB
JSR 48500
50040:
NOP
MOV Y,Y{REAL}
MOV YP{REAL},Y
NOP
MOV Y,#24{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(YP{REAL})
JSR INITFOR
NOP
MOV Y,SA{REAL}
MOVB X,(Y)
MOV PA{REAL},X
NOP
MOV Y,SE{REAL}
MOVB X,(Y)
MOV PE{REAL},X
NOP
MOV X,CC{REAL}
MOV G,CI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CF{REAL},X
50050:
NOP
MOV Y,#223{INTEGER}
MOV X,PA{REAL}
NEQ X,Y
PUSH X
MOV Y,#160{INTEGER}
MOV X,PA{REAL}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP14
JMP SKIP14
NSKIP14:
MOV Y,SA{REAL}
NOP
PUSH Y
MOV X,SC{REAL}
POP Y
MOVB (Y),X
JMP 50055
NOP
SKIP14:
50052:
NOP
MOV Y,SA{REAL}
MOVB (Y),#160{INTEGER}
50055:
NOP
MOV Y,#233{INTEGER}
MOV X,PE{REAL}
NEQ X,Y
PUSH X
MOV Y,#160{INTEGER}
MOV X,PE{REAL}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP15
JMP SKIP15
NSKIP15:
MOV Y,SE{REAL}
NOP
PUSH Y
MOV X,EC{REAL}
POP Y
MOVB (Y),X
JMP 50060
NOP
SKIP15:
50057:
NOP
MOV Y,SE{REAL}
MOVB (Y),#160{INTEGER}
50060:
NOP
MOV Y,#54272{INTEGER}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV X,CF{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,#54272{INTEGER}
MOV X,SE{REAL}
ADD X,Y
PUSH X
MOV X,CF{REAL}
POP Y
MOVB (Y),X
50070:
NOP
MOV Y,SA{REAL}
MOV X,SE{REAL}
SUB X,Y
MOV Y,#1{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP16
JMP SKIP16
NSKIP16:
JMP 50100
NOP
SKIP16:
50080:
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV WP{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,SE{REAL}
SUB X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(WP{REAL})
JSR INITFOR
NOP
MOV Y,WP{REAL}
MOVB (Y),#160{INTEGER}
50090:
NOP
MOV Y,#54272{INTEGER}
MOV X,WP{REAL}
ADD X,Y
PUSH X
MOV X,CF{REAL}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
50100:
NOP
MOV Y,#1{INTEGER}
MOV X,X{REAL}
SUB X,Y
MOV X{REAL},X
NOP
MOV Y,#0{INTEGER}
MOV X,X{REAL}
GTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP17
JMP SKIP17
NSKIP17:
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV SA{REAL},X
JMP 50120
NOP
SKIP17:
50110:
NOP
MOV Y,#160{INTEGER}
MOV SC{REAL},Y
50120:
NOP
MOV Y,#1{INTEGER}
MOV X,XE{REAL}
ADD X,Y
MOV XE{REAL},X
NOP
MOV Y,#39{INTEGER}
MOV X,XE{REAL}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP18
JMP SKIP18
NSKIP18:
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,SE{REAL}
ADD X,Y
MOV SE{REAL},X
JMP 50140
NOP
SKIP18:
50130:
NOP
MOV Y,#160{INTEGER}
MOV EC{REAL},Y
50140:
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV SA{REAL},X
NOP
MOV Y,#40{INTEGER}
MOV X,SE{REAL}
ADD X,Y
MOV SE{REAL},X
50150:
NOP
MOV Y,#1{INTEGER}
MOV X,YP{REAL}
ADD X,Y
MOV YY{REAL},X
NOP
JSR GOSUB
JSR 48500
50160:
NOP
MOV A,(YP{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
51000:
NOP
51030:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#90{INTEGER}
MOV G,PA[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#100{INTEGER}
MOV G,PD[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#10{INTEGER}
MOV G,PP[]{REAL}
JSR ARRAYSTORE
51040:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV Y,#27{INTEGER}
MOV X,I{REAL}
MUL X,Y
PUSH X
MOV Y,#10{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV Y,#1{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV Y,X
POP X
MOV G,PX[]{REAL}
JSR ARRAYSTORE
51050:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#100{INTEGER}
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
51100:
NOP
MOV A,(I{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
51160:
NOP
MOV Y,#0{INTEGER}
MOV PN{REAL},Y
NOP
JSR GOSUB
JSR 52000
NOP
MOV Y,#1{INTEGER}
MOV PN{REAL},Y
NOP
JSR GOSUB
JSR 52000
51190:
NOP
JMP RETURN
52000:
NOP
52010:
NOP
MOV X,PN{REAL}
MOV G,PX[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV Y,#960.0{REAL}
MOV X,#1024{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV SA{REAL},X
NOP
MOV Y,#24{INTEGER}
MOV Y{REAL},Y
52020:
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
EQ X,Y
PUSH X
MOV Y,SA{REAL}
MOVB X,(Y)
MOV Y,#32{INTEGER}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP19
JMP SKIP19
NSKIP19:
JMP 52050
NOP
SKIP19:
52030:
NOP
MOV Y,#1{INTEGER}
MOV X,Y{REAL}
SUB X,Y
MOV Y{REAL},X
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV SA{REAL},X
NOP
JMP 52020
52050:
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
MOV X,Y{REAL}
SUB X,Y
MOV Y,X
POP X
MOV G,PY[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
MOV X,Y{REAL}
ADD X,Y
MOV Y{REAL},X
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV SA{REAL},X
52060:
NOP
MOV Y,Y{REAL}
MOV YP{REAL},Y
NOP
MOV Y,#24{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(YP{REAL})
JSR INITFOR
52070:
NOP
MOV Y,SA{REAL}
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
52080:
NOP
MOV Y,YP{REAL}
MOV YY{REAL},Y
NOP
JSR GOSUB
JSR 48500
52100:
NOP
MOV Y,#54272{INTEGER}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV X,CC{REAL}
MOV G,CI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,#54272{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
PUSH X
MOV X,CC{REAL}
MOV G,CI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
52110:
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV SA{REAL},X
52120:
NOP
MOV A,(YP{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
53000:
NOP
53010:
NOP
JSR GOSUB
JSR 60100
53020:
NOP
MOV Y,SA{REAL}
MOVB (Y),#85{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#73{INTEGER}
53030:
NOP
MOV Y,#54272{INTEGER}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV X,PN{REAL}
MOV G,PC[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,#54273{INTEGER}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV X,PN{REAL}
MOV G,PC[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
53040:
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0.027748{REAL}
MUL X,Y
MOV Y,X
INT X,Y
MOV AI{REAL},X
NOP
MOV Y,#2{INTEGER}
MOV X,AI{REAL}
GT X,Y
MOV Y,X
NEG X,Y
MOV AD{REAL},X
53050:
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
NOP
MOV Y,#39{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV Y,AD{REAL}
ADD X,Y
PUSH X
MOV X,AI{REAL}
MOV G,CG[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
53060:
NOP
MOV Y,AD{REAL}
MOV X,SA{REAL}
ADD X,Y
MOV Y,#54232{INTEGER}
ADD X,Y
PUSH X
MOV X,PN{REAL}
MOV G,PC[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
53070:
NOP
JMP RETURN
53500:
NOP
53510:
NOP
JSR GOSUB
JSR 60100
NOP
MOV Y,#54272{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV SA{REAL},X
53520:
NOP
MOV X,PN{REAL}
MOV G,PC[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV PC{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
NOP
MOV Y,SA{REAL}
MOVB (Y),#1{INTEGER}
NOP
53530:
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV X,PC{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,SA{REAL}
PUSH Y
MOV X,PC{REAL}
POP Y
MOVB (Y),X
53540:
NOP
JMP RETURN
53700:
NOP
53710:
NOP
MOV Y,#10{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#4{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
53720:
NOP
MOVB 646,#15{INTEGER}
NOP
MOV A,#'a' and 'd' to adjust{STRING}
JSR STROUT
JSR LINEBREAK
53730:
NOP
MOV Y,#9{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#5{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
NOP
MOV A,#or number keys to enter{STRING}
JSR STROUT
JSR LINEBREAK
53740:
NOP
MOVB 646,#1{INTEGER}
NOP
JMP RETURN
53750:
NOP
53760:
NOP
MOV Y,#10{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#4{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
53770:
NOP
MOVB 646,#1{INTEGER}
NOP
MOV A,#           {STRING}
JSR STROUT
NOP
MOV A,#           {STRING}
JSR STROUT
JSR LINEBREAK
53780:
NOP
MOV Y,#9{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#5{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
NOP
MOV A,#           {STRING}
JSR STROUT
NOP
MOV A,#           {STRING}
JSR STROUT
NOP
MOV A,# {STRING}
JSR STROUT
JSR LINEBREAK
53790:
NOP
JMP RETURN
54000:
NOP
54002:
NOP
JSR GOSUB
JSR 39800
NOP
JSR GOSUB
JSR 54200
NOP
MOV X,PN{REAL}
MOV G,AF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP20
JMP SKIP20
NSKIP20:
JSR GOSUB
NOP
JSR 57000
JMP RETURN
NOP
SKIP20:
54004:
NOP
JSR GOSUB
JSR 53700
NOP
JSR GOSUB
JSR 62280
54005:
NOP
MOV B,#{STRING}
MOV AS${STRING},B
NOP
JMP 54040
54010:
NOP
JSR GOSUB
JSR 42000
NOP
JSR GETSTR
MOV A${STRING},A
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP21
JMP SKIP21
NSKIP21:
JSR GOSUB
NOP
JSR 53500
JMP 54010
NOP
SKIP21:
54012:
NOP
JSR COMPACTMAX
MOV Y,#3{INTEGER}
CHGCTX #1
JSR CHR
MOV B,A
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP22
JMP SKIP22
NSKIP22:
JSR RUN
NOP
SKIP22:
54015:
NOP
MOV B,#9{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SLTEQ
PUSH X
CHGCTX #1
MOV B,#0{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SGTEQ
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP23
JMP SKIP23
NSKIP23:
JSR GOSUB
NOP
JSR 54500
JMP 54040
NOP
SKIP23:
54020:
NOP
MOV B,#a{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP24
JMP SKIP24
NSKIP24:
NOP
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
SUB X,Y
MOV Y,X
POP X
MOV G,PA[]{REAL}
JSR ARRAYSTORE
NOP
NOP
MOV B,#{STRING}
MOV AS${STRING},B
JMP 54040
NOP
SKIP24:
54030:
NOP
MOV B,#d{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP25
JMP SKIP25
NSKIP25:
NOP
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
POP X
MOV G,PA[]{REAL}
JSR ARRAYSTORE
NOP
NOP
MOV B,#{STRING}
MOV AS${STRING},B
JMP 54040
NOP
SKIP25:
54032:
NOP
JSR COMPACTMAX
MOV Y,#13{INTEGER}
CHGCTX #1
JSR CHR
MOV B,A
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,# {STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP26
JMP SKIP26
NSKIP26:
JSR GOSUB
NOP
JSR 53750
JMP RETURN
NOP
SKIP26:
54035:
NOP
JSR COMPACTMAX
MOV Y,#20{INTEGER}
CHGCTX #1
JSR CHR
MOV B,A
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP27
JMP SKIP27
NSKIP27:
JSR GOSUB
NOP
JSR 54700
SKIP27:
54040:
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP28
JMP SKIP28
NSKIP28:
NOP
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,PA[]{REAL}
JSR ARRAYSTORE
SKIP28:
54050:
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#180{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP29
JMP SKIP29
NSKIP29:
NOP
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
POP X
MOV Y,#180{INTEGER}
MOV G,PA[]{REAL}
JSR ARRAYSTORE
SKIP29:
54060:
NOP
JSR GOSUB
JSR 54300
54080:
NOP
MOV Y,#0{INTEGER}
PUSH Y
CHGCTX #1
MOV B,AS${STRING}
CHGCTX #0
JSR LEN
POP Y
GT X,Y
CMP X,#0{REAL}
JNE NSKIP30
JMP SKIP30
NSKIP30:
NOP
NOP
JSR COMPACTMAX
MOV Y,#157{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#164{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV A,#  {STRING}
JSR STROUT
JSR LINEBREAK
JMP 54090
NOP
SKIP30:
54085:
NOP
JSR COMPACTMAX
MOV Y,#157{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV A,#   {STRING}
JSR STROUT
JSR LINEBREAK
54090:
NOP
JSR GOSUB
JSR 53000
54100:
NOP
JMP 54010
54150:
NOP
54155:
NOP
JSR COMPACTMAX
MOV Y,DD{REAL}
MOV X,#-1{INTEGER}
NEG X,Y
MOV Y,X
CHGCTX #1
JSR STR
MOV B,#  {STRING}
JSR CONCAT
JSR COPYSTR
MOV P${STRING},A
NOP
MOV Y,#10{INTEGER}
MOV KC{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV MA{REAL},Y
54156:
NOP
JSR GOSUB
JSR 54206
NOP
JMP RETURN
54200:
NOP
54205:
NOP
JSR COMPACTMAX
MOV B,#  {STRING}
CHGCTX #0
PUSH B
MOV X,PN{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
CHGCTX #1
JSR STR
POP B
JSR CONCAT
JSR COPYSTR
MOV P${STRING},A
NOP
MOV Y,#7{INTEGER}
MOV KC{REAL},Y
NOP
MOV Y,#2{INTEGER}
MOV MA{REAL},Y
54206:
NOP
JSR GOSUB
JSR 60100
NOP
MOV Y,#120{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV SA{REAL},X
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
54208:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV Y,I{REAL}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,X
POP X
MOV G,BB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV Y,I{REAL}
MOV X,SA{REAL}
ADD X,Y
MOV Y,#54272{INTEGER}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,X
POP X
MOV G,BC%[]{INTEGER}
JSR ARRAYSTORE
54210:
NOP
MOV Y,I{REAL}
MOV X,SA{REAL}
ADD X,Y
MOV Y,#54272{INTEGER}
ADD X,Y
PUSH X
MOV X,KC{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,I{REAL}
MOV X,SA{REAL}
ADD X,Y
PUSH X
JSR COMPACTMAX
MOV Y,MA{REAL}
MOV X,I{REAL}
ADD X,Y
PUSH X
MOV C,#1{INTEGER}
PUSH C
CHGCTX #1
MOV B,P${STRING}
POP D
POP C
JSR MID
MOV B,A
CHGCTX #0
JSR ASC
POP Y
MOVB (Y),X
54220:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
54250:
NOP
54260:
NOP
JSR GOSUB
JSR 60100
NOP
MOV Y,#120{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV SA{REAL},X
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
54270:
NOP
MOV Y,I{REAL}
MOV X,SA{REAL}
ADD X,Y
MOV Y,#54272{INTEGER}
ADD X,Y
PUSH X
MOV X,I{REAL}
MOV G,BC%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,I{REAL}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV X,I{REAL}
MOV G,BB%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
54280:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
54300:
NOP
54310:
NOP
JSR COMPACTMAX
MOV Y,#19{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
MOV A,#angle:    {STRING}
JSR STROUT
NOP
MOV A,LF${STRING}
JSR STROUT
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
JSR REALOUT
JSR CRSRRIGHT
54320:
NOP
JMP RETURN
54500:
NOP
54510:
NOP
MOV Y,#2{INTEGER}
PUSH Y
CHGCTX #1
MOV B,AS${STRING}
CHGCTX #0
JSR LEN
POP Y
GT X,Y
CMP X,#0{REAL}
JNE NSKIP31
JMP SKIP31
NSKIP31:
JMP RETURN
NOP
SKIP31:
54515:
NOP
MOV Y,#0{INTEGER}
PUSH Y
CHGCTX #1
MOV B,AS${STRING}
CHGCTX #0
JSR LEN
POP Y
GT X,Y
CMP X,#0{REAL}
JNE NSKIP32
JMP SKIP32
NSKIP32:
NOP
NOP
JSR COMPACTMAX
MOV B,#0{STRING}
CHGCTX #0
PUSH B
MOV C,#1{INTEGER}
CHGCTX #1
MOV B,AS${STRING}
JSR LEFT
POP B
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP33
JMP SKIP33
NSKIP33:
NOP
MOV B,#{STRING}
NOP
MOV AS${STRING},B
SKIP33:
SKIP32:
54520:
NOP
JSR COMPACTMAX
MOV B,A${STRING}
MOV A,AS${STRING}
JSR CONCAT
JSR COPYSTR
MOV AS${STRING},A
54530:
NOP
JSR GOSUB
JSR 54800
NOP
JMP RETURN
54700:
NOP
54705:
NOP
MOV Y,#0{INTEGER}
PUSH Y
CHGCTX #1
MOV B,AS${STRING}
CHGCTX #0
JSR LEN
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP34
JMP SKIP34
NSKIP34:
JMP RETURN
NOP
SKIP34:
54710:
NOP
JSR COMPACTMAX
MOV Y,#1{INTEGER}
PUSH Y
CHGCTX #1
MOV B,AS${STRING}
CHGCTX #0
JSR LEN
POP Y
SUB X,Y
MOV C,X
CHGCTX #1
MOV B,AS${STRING}
JSR LEFT
JSR COPYSTR
MOV AS${STRING},A
54720:
NOP
MOV B,#{STRING}
MOV A,AS${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP35
JMP SKIP35
NSKIP35:
NOP
NOP
MOV B,#0{STRING}
MOV AS${STRING},B
SKIP35:
54730:
NOP
JSR GOSUB
JSR 54800
NOP
JMP RETURN
54800:
NOP
54810:
NOP
MOV B,AS${STRING}
CHGCTX #0
JSR VAL
MOV AA{REAL},X
54820:
NOP
MOV Y,#0{INTEGER}
MOV X,AA{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP36
JMP SKIP36
NSKIP36:
NOP
NOP
MOV Y,#0{INTEGER}
MOV AA{REAL},Y
NOP
NOP
MOV B,#0{STRING}
MOV AS${STRING},B
SKIP36:
54830:
NOP
MOV Y,#180{INTEGER}
MOV X,AA{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP37
JMP SKIP37
NSKIP37:
NOP
NOP
MOV Y,#180{INTEGER}
MOV AA{REAL},Y
NOP
NOP
MOV B,#180{STRING}
MOV AS${STRING},B
SKIP37:
54840:
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
POP X
MOV Y,AA{REAL}
MOV G,PA[]{REAL}
JSR ARRAYSTORE
54850:
NOP
JMP RETURN
55000:
NOP
55002:
NOP
MOV X,PN{REAL}
MOV G,AF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP38
JMP SKIP38
NSKIP38:
JSR GOSUB
NOP
JSR 53000
JMP RETURN
NOP
SKIP38:
55005:
NOP
JSR GOSUB
JSR 62280
NOP
JSR GOSUB
JSR 54300
NOP
JSR COMPACTMAX
MOV Y,#157{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV A,#  {STRING}
JSR STROUT
55010:
NOP
MOV A,HM${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
55020:
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#176{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR GOSUB
JSR 55800
NOP
JSR COMPACTMAX
MOV Y,#174{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
55030:
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#98{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV A,#        {STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#98{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
55040:
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#237{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR GOSUB
JSR 55800
NOP
JSR COMPACTMAX
MOV Y,#253{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
55045:
NOP
JSR GOSUB
JSR 55200
NOP
NOP
MOV Y,#7{INTEGER}
MOV S{REAL},Y
55050:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
JSR COMPACTMAX
MOV Y,#13{INTEGER}
CHGCTX #1
JSR CHR
MOV B,A
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,# {STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP39
JMP SKIP39
NSKIP39:
JMP RETURN
NOP
SKIP39:
55052:
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
MOV X,PN{REAL}
MOV G,PP[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
POP X
MOV G,PP[]{REAL}
JSR ARRAYSTORE
NOP
MOV X,PN{REAL}
MOV G,PP[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#101{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP40
JMP SKIP40
NSKIP40:
NOP
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
POP X
MOV Y,#10{INTEGER}
MOV G,PP[]{REAL}
JSR ARRAYSTORE
JSR GOSUB
NOP
JSR 55200
SKIP40:
55055:
NOP
MOV X,PN{REAL}
MOV G,PP[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1.7857{REAL}
DIV X,Y
MOV PP{REAL},X
55060:
NOP
MOV Y,S{REAL}
MOV X,PP{REAL}
DIV X,Y
MOV Y,X
INT X,Y
MOV PH{REAL},X
NOP
MOV Y,S{REAL}
MOV X,PH{REAL}
MUL X,Y
MOV Y,X
MOV X,PP{REAL}
SUB X,Y
MOV PL{REAL},X
NOP
MOV Y,S{REAL}
MOV X,PH{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP41
JMP SKIP41
NSKIP41:
JMP 55090
NOP
SKIP41:
55070:
NOP
MOV X,PN{REAL}
MOV G,PO%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1105{INTEGER}
ADD X,Y
MOV Y,PH{REAL}
ADD X,Y
PUSH X
MOV X,PL{REAL}
MOV G,PM[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
55090:
NOP
JMP 55050
55200:
NOP
55210:
NOP
MOV X,PN{REAL}
MOV G,PO%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PO%{INTEGER},X
NOP
MOV Y,PO%{INTEGER}
MOV X,#1105{INTEGER}
ADD X,Y
MOV I{REAL},X
NOP
MOV Y,PO%{INTEGER}
MOV X,#1112{INTEGER}
ADD X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
55220:
NOP
MOV Y,I{REAL}
MOVB (Y),#32{INTEGER}
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
POP X
MOV Y,#10{INTEGER}
MOV G,PP[]{REAL}
JSR ARRAYSTORE
NOP
JMP RETURN
55800:
NOP
55810:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR COMPACTMAX
MOV Y,#99{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV A,(I{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
55820:
NOP
JMP RETURN
56000:
NOP
56010:
NOP
JSR GOSUB
JSR 54250
NOP
JSR GOSUB
JSR 60000
NOP
MOV Y,#-1.0{REAL}
MOV OC{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV OA{REAL},Y
56020:
NOP
MOV X,PN{REAL}
MOV G,PA[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#180{INTEGER}
DIV X,Y
MOV Y,#3.141592{REAL}
MUL X,Y
MOV AF{REAL},X
NOP
MOV X,PN{REAL}
MOV G,PP[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV PF{REAL},X
56030:
NOP
MOV Y,#3.141592{REAL}
MOV X,AF{REAL}
GTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP42
JMP SKIP42
NSKIP42:
NOP
NOP
MOV Y,#3.1315920000000004{REAL}
MOV AF{REAL},Y
SKIP42:
56032:
NOP
MOV Y,#0{INTEGER}
MOV X,AF{REAL}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP43
JMP SKIP43
NSKIP43:
NOP
NOP
MOV Y,#0.01{REAL}
MOV AF{REAL},Y
SKIP43:
56034:
NOP
MOV Y,AF{REAL}
COS X,Y
MOV CF{REAL},X
NOP
MOV Y,AF{REAL}
SIN X,Y
MOV SF{REAL},X
56036:
NOP
MOV A,#4{INTEGER}
MOV X,CF{REAL}
SHL X,A
PUSH X
MOV X,PN{REAL}
MOV G,PX[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV A,#3{INTEGER}
SHL X,A
MOV Y,#8{INTEGER}
ADD X,Y
POP Y
SUB X,Y
MOV XF{REAL},X
NOP
MOV A,#3{INTEGER}
MOV X,SF{REAL}
SHL X,A
PUSH X
MOV X,PN{REAL}
MOV G,PY[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV A,#3{INTEGER}
SHL X,A
MOV Y,#8{INTEGER}
ADD X,Y
POP Y
SUB X,Y
MOV YF{REAL},X
56040:
NOP
MOV Y,#20{INTEGER}
MOV X,PF{REAL}
DIV X,Y
PUSH X
MOV Y,CF{REAL}
MOV X,#-1{INTEGER}
NEG X,Y
POP Y
MUL X,Y
MOV DX{REAL},X
NOP
MOV Y,#20{INTEGER}
MOV X,PF{REAL}
DIV X,Y
PUSH X
MOV Y,SF{REAL}
MOV X,#-1{INTEGER}
NEG X,Y
POP Y
MUL X,Y
MOV DY{REAL},X
56045:
NOP
JSR GOSUB
JSR 39650
56050:
NOP
JSR GOSUB
JSR 58000
56060:
NOP
MOV Y,#32{INTEGER}
MOV X,OC{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP44
JMP SKIP44
NSKIP44:
NOP
NOP
MOV Y,#-1.0{REAL}
MOV X,OC{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP45
JMP SKIP45
NSKIP45:
NOP
MOV Y,PO{REAL}
NOP
MOV SP{REAL},Y
JSR GOSUB
JSR 59000
JSR GOSUB
JSR 61000
JMP RETURN
NOP
NOP
SKIP45:
NOP
SKIP44:
56070:
NOP
MOV Y,#0.02{REAL}
MOV X,DY{REAL}
ADD X,Y
MOV DY{REAL},X
NOP
JMP 56050
57000:
NOP
57005:
NOP
JSR GOSUB
JSR 42000
57010:
NOP
JMP RETURN
58000:
NOP
58030:
NOP
MOV Y,DX{REAL}
MOV X,XF{REAL}
ADD X,Y
MOV XF{REAL},X
NOP
MOV Y,DY{REAL}
MOV X,YF{REAL}
ADD X,Y
MOV YF{REAL},X
NOP
JSR GOSUB
JSR 58300
58035:
NOP
MOV Y,#0{INTEGER}
MOV X,XF{REAL}
LT X,Y
PUSH X
MOV Y,#319{INTEGER}
MOV X,XF{REAL}
GT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP46
JMP SKIP46
NSKIP46:
JMP 58200
NOP
SKIP46:
58040:
NOP
MOV Y,#0{INTEGER}
MOV X,YF{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP47
JMP SKIP47
NSKIP47:
NOP
NOP
MOV Y,#-1.0{REAL}
MOV OC{REAL},Y
JSR GOSUB
NOP
JSR 59500
JMP 58140
NOP
SKIP47:
58050:
NOP
JSR GOSUB
JSR 58350
58100:
NOP
MOV Y,XF{REAL}
MOV XX%{INTEGER},Y
NOP
JSR GOSUB
JSR 58250
58110:
NOP
MOV X,OV{REAL}
MOVB 53264,X
58120:
NOP
MOV Y,PO{REAL}
MOVB X,(Y)
MOV OC{REAL},X
58140:
NOP
JMP RETURN
58200:
NOP
JSR GOSUB
JSR 58400
58210:
NOP
MOV Y,#160{INTEGER}
MOV OC{REAL},Y
NOP
JMP RETURN
58250:
NOP
58260:
NOP
MOV Y,#20{INTEGER}
MOV X,XX%{INTEGER}
ADD X,Y
MOV XX%{INTEGER},X
NOP
MOV Y,#255{INTEGER}
MOV X,XX%{INTEGER}
GT X,Y
MOV Y,X
NEG X,Y
MOV OV{REAL},X
NOP
MOV Y,#46{INTEGER}
MOV X,YF{REAL}
ADD X,Y
MOVB 53249,X
NOP
MOV Y,#255{INTEGER}
MOV X,XX%{INTEGER}
AND X,Y
MOVB 53248,X
58270:
NOP
JMP RETURN
58300:
NOP
58310:
NOP
MOV A,#3{INTEGER}
MOV X,YF{REAL}
SHR X,A
MOV Y,X
INT X,Y
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV A,#3{INTEGER}
MOV X,XF{REAL}
SHR X,A
MOV Y,X
INT X,Y
MOV Y,#1024{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV PO{REAL},X
NOP
JMP RETURN
58350:
NOP
58360:
NOP
MOV Y,#0{INTEGER}
MOV X,OA{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP48
JMP SKIP48
NSKIP48:
MOV Y,OA{REAL}
NOP
MOVB (Y),#32{INTEGER}
NOP
NOP
MOV Y,#0{INTEGER}
MOV OA{REAL},Y
SKIP48:
58370:
NOP
JMP RETURN
58400:
NOP
58410:
NOP
MOVB 53248,#0{INTEGER}
NOP
MOVB 53264,#0{INTEGER}
NOP
JMP RETURN
58430:
NOP
58435:
NOP
JSR GOSUB
JSR 58400
NOP
MOVB 53287,#1{INTEGER}
NOP
MOVB 53276,#0{INTEGER}
58540:
NOP
MOVB 2040,#11{INTEGER}
NOP
JMP RETURN
58560:
NOP
58570:
NOP
MOV Y,#8{INTEGER}
MOV X,XF{REAL}
SUB X,Y
MOV XX%{INTEGER},X
NOP
JSR GOSUB
JSR 58250
NOP
MOVB 53287,#7{INTEGER}
NOP
MOVB 53276,#1{INTEGER}
NOP
MOVB 2040,#253{INTEGER}
58580:
NOP
JMP RETURN
59000:
NOP
59020:
NOP
JSR GOSUB
JSR 58350
59025:
NOP
MOV Y,#0{INTEGER}
MOV X,XF{REAL}
LT X,Y
PUSH X
MOV Y,#319{INTEGER}
MOV X,XF{REAL}
GT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP49
JMP SKIP49
NSKIP49:
JSR GOSUB
NOP
JSR 58400
JSR GOSUB
NOP
JSR 59800
JMP RETURN
NOP
SKIP49:
59030:
NOP
JSR GOSUB
JSR 58560
NOP
MOV Y,#2024{INTEGER}
MOV X,PO{REAL}
LT X,Y
PUSH X
MOV Y,#1023{INTEGER}
MOV X,PO{REAL}
GT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP50
JMP SKIP50
NSKIP50:
MOV Y,PO{REAL}
NOP
MOVB (Y),#32{INTEGER}
JMP 59040
NOP
SKIP50:
59035:
NOP
JSR GOSUB
JSR 58430
NOP
JMP RETURN
59040:
NOP
MOV A,#3{INTEGER}
MOV X,YF{REAL}
SHR X,A
MOV Y,#1{INTEGER}
SUB X,Y
MOV Y,X
INT X,Y
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV A,#3{INTEGER}
MOV X,XF{REAL}
SHR X,A
MOV Y,X
INT X,Y
MOV Y,#1{INTEGER}
SUB X,Y
MOV Y,#1024{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV PA{REAL},X
59045:
NOP
JSR GOSUB
JSR 39400
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
59050:
NOP
MOV Y,PA{REAL}
MOV PO{REAL},Y
NOP
MOV Y,#80{INTEGER}
MOV X,PA{REAL}
ADD X,Y
PUSH X
NOP
MOV Y,#40{INTEGER}
PUSH Y
MOV A,(PO{REAL})
JSR INITFOR
NOP
MOV A,#3{INTEGER}
MOV X,XF{REAL}
SHR X,A
MOV Y,X
INT X,Y
MOV Y,#1{INTEGER}
SUB X,Y
MOV XI{REAL},X
59060:
NOP
MOV Y,PO{REAL}
MOV PJ{REAL},Y
NOP
MOV Y,#2{INTEGER}
MOV X,PO{REAL}
ADD X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(PJ{REAL})
JSR INITFOR
NOP
MOV X,CS%{INTEGER}
MOV G,SB%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOVB 2040,X
NOP
MOV X,CS%{INTEGER}
JSR FINX
MOV CS%{INTEGER},X
59070:
NOP
MOV Y,#2023{INTEGER}
MOV X,PJ{REAL}
GT X,Y
PUSH X
MOV Y,#1024{INTEGER}
MOV X,PJ{REAL}
LT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP51
JMP SKIP51
NSKIP51:
JMP 59110
NOP
SKIP51:
59075:
NOP
MOV Y,#32{INTEGER}
MOV PV{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV X,PO{REAL}
ADD X,Y
MOV Y,X
MOV X,PJ{REAL}
EQ X,Y
PUSH X
MOV Y,#40{INTEGER}
MOV X,PA{REAL}
ADD X,Y
MOV Y,X
MOV X,PO{REAL}
EQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP52
JMP SKIP52
NSKIP52:
JMP 59100
NOP
SKIP52:
59080:
NOP
MOV Y,#1024{INTEGER}
MOV X,PJ{REAL}
SUB X,Y
MOV Y,#40{INTEGER}
DIV X,Y
MOV PL{REAL},X
NOP
MOV Y,PO{REAL}
MOV X,PJ{REAL}
NEQ X,Y
PUSH X
MOV Y,PL{REAL}
INT X,Y
MOV Y,X
MOV X,PL{REAL}
EQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP53
JMP SKIP53
NSKIP53:
JMP 59085
NOP
SKIP53:
59082:
NOP
MOV Y,PA{REAL}
MOV X,PO{REAL}
NEQ X,Y
MOV A,#6{INTEGER}
MOV Y,X
SHL X,A
MOV A,#4{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV Y,#40{INTEGER}
MOV X,PJ{REAL}
SUB X,Y
POP Y
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,PJ{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP54
JMP SKIP54
NSKIP54:
NOP
NOP
MOV Y,#105{INTEGER}
MOV PV{REAL},Y
SKIP54:
59085:
NOP
MOV Y,#1023{INTEGER}
MOV X,PJ{REAL}
SUB X,Y
MOV Y,#40{INTEGER}
DIV X,Y
MOV PL{REAL},X
NOP
MOV Y,PO{REAL}
MOV X,PJ{REAL}
EQ X,Y
PUSH X
MOV Y,PL{REAL}
INT X,Y
MOV Y,X
MOV X,PL{REAL}
EQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP55
JMP SKIP55
NSKIP55:
JMP 59095
NOP
SKIP55:
59090:
NOP
MOV Y,PA{REAL}
MOV X,PO{REAL}
NEQ X,Y
MOV A,#6{INTEGER}
MOV Y,X
SHL X,A
MOV A,#4{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV Y,#40{INTEGER}
MOV X,PJ{REAL}
SUB X,Y
POP Y
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,PJ{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP56
JMP SKIP56
NSKIP56:
NOP
NOP
MOV Y,#95{INTEGER}
MOV PV{REAL},Y
SKIP56:
59095:
NOP
MOV Y,#105{INTEGER}
MOV X,PV{REAL}
EQ X,Y
PUSH X
MOV Y,PA{REAL}
MOV X,PO{REAL}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP57
JMP SKIP57
NSKIP57:
NOP
NOP
MOV Y,#223.0{REAL}
MOV PV{REAL},Y
SKIP57:
59096:
NOP
MOV Y,#95{INTEGER}
MOV X,PV{REAL}
EQ X,Y
PUSH X
MOV Y,PA{REAL}
MOV X,PO{REAL}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP58
JMP SKIP58
NSKIP58:
NOP
NOP
MOV Y,#233.0{REAL}
MOV PV{REAL},Y
SKIP58:
59100:
NOP
MOV Y,#40{INTEGER}
MOV X,XI{REAL}
LT X,Y
PUSH X
MOV Y,#-1.0{REAL}
MOV X,XI{REAL}
GT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP59
JMP SKIP59
NSKIP59:
MOV Y,PJ{REAL}
NOP
PUSH Y
MOV X,PV{REAL}
POP Y
MOVB (Y),X
SKIP59:
59110:
NOP
MOV Y,#1{INTEGER}
MOV X,XI{REAL}
ADD X,Y
MOV XI{REAL},X
NOP
JSR GOSUB
JSR 42000
NOP
MOV A,(PJ{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV A,(PO{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
59120:
NOP
JSR GOSUB
JSR 58430
NOP
JMP RETURN
59200:
NOP
59210:
NOP
MOV Y,PN{REAL}
MOV PA{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV PJ{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(PJ{REAL})
JSR INITFOR
59220:
NOP
MOV Y,PJ{REAL}
MOV PN{REAL},Y
NOP
MOV X,PN{REAL}
MOV G,PX[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV X,PN{REAL}
MOV G,PY[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
ADD X,Y
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
MOV Y,#1024{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV Y,#40{INTEGER}
ADD X,Y
MOV SA{REAL},X
59230:
NOP
MOV Y,#2024{INTEGER}
MOV X,SA{REAL}
LT X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
EQ X,Y
PUSH X
MOV Y,SA{REAL}
MOVB X,(Y)
MOV Y,#32{INTEGER}
EQ X,Y
POP Y
AND X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP60
JMP SKIP60
NSKIP60:
JSR GOSUB
NOP
JSR 59900
SKIP60:
59240:
NOP
JSR GOSUB
JSR 53000
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,PA{REAL}
MOV PN{REAL},Y
59250:
NOP
JMP RETURN
59500:
NOP
59510:
NOP
MOV A,#3{INTEGER}
MOV X,XF{REAL}
SHR X,A
MOV Y,X
INT X,Y
MOV Y,#1024{INTEGER}
ADD X,Y
MOV PA{REAL},X
59520:
NOP
MOV Y,PA{REAL}
MOV OA{REAL},Y
NOP
MOV Y,PA{REAL}
MOVB (Y),#30{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,PA{REAL}
ADD X,Y
MOV PA{REAL},X
59530:
NOP
MOV Y,#1064{INTEGER}
MOV X,PA{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP61
JMP SKIP61
NSKIP61:
MOV Y,PA{REAL}
NOP
MOVB (Y),#32{INTEGER}
SKIP61:
59540:
NOP
MOV Y,#2{INTEGER}
MOV X,PA{REAL}
SUB X,Y
MOV PA{REAL},X
NOP
MOV Y,#1023{INTEGER}
MOV X,PA{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP62
JMP SKIP62
NSKIP62:
MOV Y,PA{REAL}
NOP
MOVB (Y),#32{INTEGER}
SKIP62:
59550:
NOP
JSR GOSUB
JSR 58400
NOP
JMP RETURN
59800:
NOP
59805:
NOP
JSR GOSUB
JSR 58400
NOP
JSR GOSUB
JSR 42000
NOP
JSR GOSUB
JSR 39850
59810:
NOP
MOV Y,#1{INTEGER}
MOV OB%{INTEGER},Y
NOP
JMP RETURN
59900:
NOP
59910:
NOP
MOV Y,#120{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV SA{REAL},X
NOP
MOV Y,SA{REAL}
MOVB (Y),#32{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
59920:
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
NOP
MOV Y,#41{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
59923:
NOP
MOV Y,#54272{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
NOP
MOV Y,#54273{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
59924:
NOP
MOV Y,#54312{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
NOP
MOV Y,#54313{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
59930:
NOP
JSR GOSUB
JSR 60100
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV SA{REAL},X
59940:
NOP
MOV Y,#2023{INTEGER}
MOV X,SA{REAL}
GT X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
PUSH X
MOV Y,SA{REAL}
MOVB X,(Y)
MOV Y,#32{INTEGER}
NEQ X,Y
POP Y
OR X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP63
JMP SKIP63
NSKIP63:
JMP 59980
NOP
SKIP63:
59950:
NOP
MOV Y,PN{REAL}
PUSH Y
NOP
MOV X,PN{REAL}
MOV G,PY[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
POP X
MOV G,PY[]{REAL}
JSR ARRAYSTORE
NOP
JMP 59910
59980:
NOP
JMP RETURN
60000:
NOP
60020:
NOP
MOV A,HM${STRING}
JSR STROUT
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
MOV A,#           {STRING}
JSR STROUT
60030:
NOP
MOV A,HM${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
MOV A,#           {STRING}
JSR STROUT
60040:
NOP
MOV A,HM${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
MOV A,#           {STRING}
JSR STROUT
60050:
NOP
MOV A,HM${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
NOP
MOV A,DN${STRING}
JSR STROUT
NOP
MOV X,PN{REAL}
CHGCTX #1
MOV G,PO$[]{STRING}
JSR ARRAYACCESS
JSR STROUT
NOP
MOV A,#           {STRING}
JSR STROUT
60060:
NOP
JMP RETURN
60100:
NOP
60110:
NOP
MOV X,PN{REAL}
MOV G,PX[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV X,PN{REAL}
MOV G,PY[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
MOV Y,#1024{INTEGER}
ADD X,Y
POP Y
ADD X,Y
MOV Y,#40{INTEGER}
ADD X,Y
MOV SA{REAL},X
NOP
JMP RETURN
61000:
NOP
61005:
NOP
MOV Y,#1{INTEGER}
MOV X,OB%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP64
JMP SKIP64
NSKIP64:
NOP
NOP
MOV Y,#0{INTEGER}
MOV OB%{INTEGER},Y
JMP RETURN
NOP
SKIP64:
61010:
NOP
MOV Y,#1024{INTEGER}
MOV X,SP{REAL}
SUB X,Y
MOV SP{REAL},X
NOP
MOV Y,#40{INTEGER}
MOV X,SP{REAL}
DIV X,Y
MOV Y,X
INT X,Y
MOV PY{REAL},X
NOP
MOV Y,PY{REAL}
MOV A,#5{INTEGER}
MOV X,Y
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
MOV Y,X
MOV X,SP{REAL}
SUB X,Y
MOV PX{REAL},X
61015:
NOP
MOV Y,#0{INTEGER}
MOV X,PX{REAL}
LT X,Y
PUSH X
MOV Y,#39{INTEGER}
MOV X,PX{REAL}
GT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP65
JMP SKIP65
NSKIP65:
JMP RETURN
NOP
SKIP65:
61020:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,PX[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,PX{REAL}
GT X,Y
PUSH X
MOV X,I{REAL}
MOV G,PX[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,PX{REAL}
SUB X,Y
MOV Y,X
ABS X,Y
POP Y
ADD X,Y
MOV DX{REAL},X
NOP
MOV X,I{REAL}
MOV G,PY[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,PY{REAL}
SUB X,Y
MOV Y,X
ABS X,Y
MOV DY{REAL},X
61030:
NOP
MOV Y,#2{INTEGER}
MOV X,DY{REAL}
GT X,Y
PUSH X
MOV Y,#2{INTEGER}
MOV X,DX{REAL}
GT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP66
JMP SKIP66
NSKIP66:
JMP 61200
NOP
SKIP66:
61040:
NOP
MOV Y,DY{REAL}
MOV X,#2{INTEGER}
SUB X,Y
MOV Y,#10{INTEGER}
MUL X,Y
PUSH X
MOV Y,DX{REAL}
MOV X,#2{INTEGER}
SUB X,Y
MOV Y,#10{INTEGER}
MUL X,Y
POP Y
ADD X,Y
MOV DD{REAL},X
61045:
NOP
MOV Y,#0{INTEGER}
MOV X,DD{REAL}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP67
JMP SKIP67
NSKIP67:
JMP 61200
NOP
SKIP67:
61050:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV X,I{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,DD{REAL}
SUB X,Y
MOV Y,X
POP X
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,I{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP68
JMP SKIP68
NSKIP68:
NOP
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
SKIP68:
61060:
NOP
MOV Y,PN{REAL}
MOV PA{REAL},Y
NOP
MOV Y,I{REAL}
MOV PN{REAL},Y
NOP
JSR GOSUB
JSR 39750
NOP
JSR GOSUB
JSR 54150
61070:
NOP
MOV Y,#0{INTEGER}
MOV P{REAL},Y
NOP
MOV A,#1{INTEGER}
MOV X,DD{REAL}
SHL X,A
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
NOP
MOV Y,#53266{INTEGER}
MOV A,#7{INTEGER}
JSR PEEKBYTEAND
MOV Y,#8{INTEGER}
OR X,Y
MOVB 53270,X
NOP
MOV A,(P{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
61080:
NOP
MOVB 53270,#8{INTEGER}
NOP
JSR GOSUB
JSR 54250
NOP
MOV Y,PA{REAL}
MOV PN{REAL},Y
61200:
NOP
MOV A,(I{})
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
61600:
NOP
61610:
NOP
JSR COMPACTMAX
MOV X,#1{INTEGER}
MOV G,PS[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
CHGCTX #1
JSR STR
PUSH A
MOV B,# -{STRING}
CHGCTX #0
PUSH B
MOV X,#0{INTEGER}
MOV G,PS[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
CHGCTX #1
JSR STR
POP B
JSR CONCAT
POP B
JSR CONCAT
JSR COPYSTR
MOV A${STRING},A
61620:
NOP
MOV Y,#4{INTEGER}
MOV YP{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV CK{REAL},Y
NOP
JSR GOSUB
JSR 62900
61630:
NOP
JMP RETURN
62000:
NOP
62010:
NOP
MOV Y,#0{INTEGER}
MOV PA{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV PD{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP69
JMP SKIP69
NSKIP69:
NOP
NOP
MOV Y,PD{REAL}
MOV X,PA{REAL}
ADD X,Y
MOV PA{REAL},X
JSR GOSUB
NOP
JSR 62100
SKIP69:
62020:
NOP
MOV Y,#9{INTEGER}
MOV X,PD{REAL}
ADD X,Y
MOV PD{REAL},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
62025:
NOP
MOV Y,#0{INTEGER}
MOV X,PA{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP70
JMP SKIP70
NSKIP70:
JMP RETURN
NOP
SKIP70:
62028:
NOP
JSR GOSUB
JSR 39500
62030:
NOP
MOV Y,#10{INTEGER}
MOV X,PA{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP71
JMP SKIP71
NSKIP71:
NOP
NOP
MOV B,#draw!!{STRING}
MOV A${STRING},B
NOP
NOP
MOV Y,#6{INTEGER}
MOV YP{REAL},Y
NOP
NOP
MOV Y,#10{INTEGER}
MOV CK{REAL},Y
JSR GOSUB
NOP
JSR 62900
SKIP71:
62035:
NOP
MOV Y,#6{INTEGER}
MOV YP{REAL},Y
62040:
NOP
MOV Y,#1{INTEGER}
MOV X,PA{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP72
JMP SKIP72
NSKIP72:
NOP
NOP
MOV B,#player 2 wins!{STRING}
MOV A${STRING},B
NOP
NOP
MOV X,#1{INTEGER}
MOV G,PC[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV CK{REAL},X
NOP
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV X,#1{INTEGER}
MOV G,PS[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
POP X
MOV G,PS[]{REAL}
JSR ARRAYSTORE
JSR GOSUB
NOP
JSR 62900
SKIP72:
62050:
NOP
MOV Y,#10{INTEGER}
MOV X,PA{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP73
JMP SKIP73
NSKIP73:
NOP
NOP
MOV B,#player 1 wins!{STRING}
MOV A${STRING},B
NOP
NOP
MOV X,#0{INTEGER}
MOV G,PC[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV CK{REAL},X
NOP
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
MOV X,#0{INTEGER}
MOV G,PS[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
POP X
MOV G,PS[]{REAL}
JSR ARRAYSTORE
JSR GOSUB
NOP
JSR 62900
SKIP73:
62060:
NOP
JSR GOSUB
JSR 61600
NOP
JSR GOSUB
JSR 62280
NOP
JSR GOSUB
JSR 62250
62070:
NOP
MOV Y,#1{INTEGER}
MOV RS%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV X,RP{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
AND X,Y
MOV RP{REAL},X
NOP
MOV Y,RP{REAL}
MOV CP{REAL},Y
NOP
JMP RETURN
62100:
NOP
62110:
NOP
MOV Y,PN{REAL}
MOV OO{REAL},Y
NOP
MOV Y,I{REAL}
MOV PN{REAL},Y
NOP
JSR GOSUB
JSR 60100
NOP
MOV Y,SA{REAL}
MOVB (Y),#104{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#104{INTEGER}
62120:
NOP
MOV Y,#40{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
NOP
MOV Y,#39{INTEGER}
MOV X,SA{REAL}
SUB X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
NOP
MOV Y,OO{REAL}
MOV PN{REAL},Y
NOP
JMP RETURN
62200:
NOP
62210:
NOP
MOV Y,#53265{INTEGER}
MOV A,#239{INTEGER}
JSR PEEKBYTEAND
MOVB 53265,X
NOP
JMP RETURN
62220:
NOP
62230:
NOP
MOV Y,#53265{INTEGER}
MOV A,#16{INTEGER}
JSR PEEKBYTEOR
MOVB 53265,X
NOP
JMP RETURN
62250:
NOP
62260:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
JSR GOSUB
JSR 42000
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP74
JMP SKIP74
NSKIP74:
JMP 62260
NOP
SKIP74:
62270:
NOP
JMP RETURN
62280:
NOP
62285:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
JSR GOSUB
JSR 42000
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SNEQ
CMP X,#0{REAL}
JNE NSKIP75
JMP SKIP75
NSKIP75:
JMP 62285
NOP
SKIP75:
62290:
NOP
JMP RETURN
62300:
NOP
62310:
NOP
JSR RESTORE
62320:
NOP
JSR READNUMBER
MOV A{REAL},Y
NOP
MOV Y,#-1.0{REAL}
MOV X,A{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP76
JMP SKIP76
NSKIP76:
JMP 62320
NOP
SKIP76:
62330:
NOP
MOV Y,#0{INTEGER}
MOV CO{REAL},Y
NOP
MOV Y,#1024{INTEGER}
MOV I{REAL},Y
NOP
JSR GOSUB
JSR 62200
62340:
NOP
JSR READNUMBER
MOV P{REAL},Y
62350:
NOP
MOV Y,#-999.0{REAL}
MOV X,P{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP77
JMP SKIP77
NSKIP77:
JSR GOSUB
NOP
JSR 62220
MOV Y,#1{INTEGER}
NOP
MOV X,Y
MOVB 53280,X
JMP RETURN
NOP
SKIP77:
62360:
NOP
MOV Y,#0{INTEGER}
MOV X,P{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP78
JMP SKIP78
NSKIP78:
JSR GOSUB
NOP
JSR 62400
JMP 62340
NOP
SKIP78:
62370:
NOP
MOV Y,#16{INTEGER}
MOV X,P{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP79
JMP SKIP79
NSKIP79:
NOP
NOP
MOV Y,P{REAL}
MOV CO{REAL},Y
JMP 62340
NOP
SKIP79:
62380:
NOP
MOV Y,#16{INTEGER}
MOV X,P{REAL}
ADD X,Y
MOV P{REAL},X
NOP
MOV Y,I{REAL}
PUSH Y
MOV X,P{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,I{REAL}
MOV X,#54272{INTEGER}
ADD X,Y
PUSH X
MOV X,CO{REAL}
POP Y
MOVB (Y),X
NOP
MOV X,P{REAL}
MOVB 53280,X
62390:
NOP
MOV Y,#1{INTEGER}
MOV X,I{REAL}
ADD X,Y
MOV I{REAL},X
NOP
JMP 62340
62400:
NOP
62410:
NOP
MOV Y,I{REAL}
MOV J{REAL},Y
NOP
MOV Y,P{REAL}
MOV X,I{REAL}
SUB X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(J{REAL})
JSR INITFOR
62420:
NOP
MOV Y,J{REAL}
MOVB (Y),#160{INTEGER}
NOP
MOV Y,J{REAL}
MOV X,#54272{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
62430:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
62440:
NOP
MOV Y,#1{INTEGER}
MOV X,J{REAL}
SUB X,Y
MOV I{REAL},X
NOP
JMP RETURN
62500:
NOP
62510:
NOP
JSR GOSUB
JSR 62300
62520:
NOP
MOVB 646,#6{INTEGER}
NOP
MOV Y,#3{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#3{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
62530:
NOP
MOV A,#the battle of{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV Y,#10{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#4{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
62540:
NOP
MOV A,#vittorio!{STRING}
JSR STROUT
JSR LINEBREAK
62550:
NOP
MOVB 646,#5{INTEGER}
NOP
MOV Y,#23{INTEGER}
MOV XP{REAL},Y
NOP
MOV Y,#24{INTEGER}
MOV YP{REAL},Y
NOP
JSR GOSUB
JSR 62950
62560:
NOP
MOV A,#egonolsen71/2021{STRING}
JSR STROUT
62565:
NOP
JSR GOSUB
JSR 62280
62570:
NOP
JSR GOSUB
JSR 42000
NOP
JSR GOSUB
JSR 63700
62580:
NOP
JSR GOSUB
JSR 62200
NOP
MOVB 646,#1{INTEGER}
NOP
JSR COMPACTMAX
MOV Y,#147{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
62590:
NOP
MOVB 53280,#6{INTEGER}
NOP
MOVB 53281,#6{INTEGER}
62850:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,PS[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,PS[]{REAL}
JSR ARRAYSTORE
62870:
NOP
JSR COMPACTMAX
MOV Y,#147{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR GOSUB
JSR 62220
NOP
JMP RETURN
62900:
NOP
62910:
NOP
MOV Y,#2{INTEGER}
PUSH Y
CHGCTX #1
MOV B,A${STRING}
CHGCTX #0
JSR LEN
POP Y
DIV X,Y
MOV Y,X
INT X,Y
MOV Y,X
MOV X,#20{INTEGER}
SUB X,Y
MOV XP{REAL},X
NOP
MOVB X,646
MOV II{REAL},X
NOP
MOV X,CK{REAL}
MOVB 646,X
62920:
NOP
JSR GOSUB
JSR 62950
62930:
NOP
MOV A,A${STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV X,II{REAL}
MOVB 646,X
NOP
JMP RETURN
62950:
NOP
62960:
NOP
MOV X,YP{REAL}
MOVB 781,X
NOP
MOV X,XP{REAL}
MOVB 782,X
NOP
MOV Y,#783{INTEGER}
MOV A,#254{INTEGER}
JSR PEEKBYTEAND
MOVB 783,X
NOP
JSR $fff0
62970:
NOP
JMP RETURN
62980:
NOP
62981:
62982:
62983:
62984:
62986:
62987:
62988:
62989:
62990:
62991:
62992:
62993:
63000:
63010:
63011:
63012:
63013:
63014:
63015:
63016:
63017:
63018:
63019:
63020:
63021:
63022:
63023:
63024:
63025:
63026:
63027:
63028:
63029:
63030:
63031:
63032:
63033:
63034:
63035:
63036:
63037:
63038:
63039:
63040:
63041:
63042:
63043:
63044:
63045:
63046:
63047:
63048:
63049:
63050:
63051:
63052:
63053:
63054:
63055:
63056:
63057:
63058:
63059:
63060:
63061:
63062:
63063:
63064:
63065:
63066:
63067:
63068:
63069:
63070:
63071:
63072:
63073:
63074:
63700:
NOP
63705:
NOP
63720:
NOP
MOVB 54296,#15{INTEGER}
63730:
NOP
MOVB 54277,#9{INTEGER}
NOP
MOVB 54278,#0{INTEGER}
63735:
NOP
MOVB 54284,#26{INTEGER}
NOP
MOVB 54285,#36{INTEGER}
63740:
NOP
MOVB 54291,#16{INTEGER}
NOP
MOVB 54292,#240{INTEGER}
63750:
NOP
MOV Y,TI{REAL}
MOV T{REAL},Y
63760:
NOP
MOVB 54276,#32{INTEGER}
NOP
MOVB 54283,#32{INTEGER}
NOP
MOVB 54290,#16{INTEGER}
63770:
NOP
JSR READNUMBER
MOV X{REAL},Y
NOP
MOV Y,#-1.0{REAL}
MOV X,X{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP80
JMP SKIP80
NSKIP80:
JMP 63900
NOP
SKIP80:
63780:
NOP
JSR READNUMBER
MOV H1{REAL},Y
JSR READNUMBER
MOV L1{REAL},Y
JSR READNUMBER
MOV H2{REAL},Y
JSR READNUMBER
MOV L2{REAL},Y
JSR READNUMBER
MOV H3{REAL},Y
JSR READNUMBER
MOV L3{REAL},Y
63790:
NOP
MOV Y,H1{REAL}
CMP Y,#0{REAL}
JNE NSKIP81
JMP SKIP81
NSKIP81:
MOV Y,H1{REAL}
NOP
MOV X,Y
MOVB 54273,X
MOV Y,L1{REAL}
NOP
MOV X,Y
MOVB 54272,X
MOV Y,#33{INTEGER}
NOP
MOV X,Y
MOVB 54276,X
SKIP81:
63800:
NOP
MOV Y,H2{REAL}
CMP Y,#0{REAL}
JNE NSKIP82
JMP SKIP82
NSKIP82:
MOV Y,H2{REAL}
NOP
MOV X,Y
MOVB 54280,X
MOV Y,L2{REAL}
NOP
MOV X,Y
MOVB 54279,X
MOV Y,#33{INTEGER}
NOP
MOV X,Y
MOVB 54283,X
SKIP82:
63810:
NOP
MOV Y,H3{REAL}
CMP Y,#0{REAL}
JNE NSKIP83
JMP SKIP83
NSKIP83:
MOV Y,H3{REAL}
NOP
MOV X,Y
MOVB 54287,X
MOV Y,L3{REAL}
NOP
MOV X,Y
MOVB 54286,X
MOV Y,#17{INTEGER}
NOP
MOV X,Y
MOVB 54290,X
SKIP83:
63820:
NOP
MOV Y,X{REAL}
MOV X,T{REAL}
ADD X,Y
MOV T{REAL},X
63830:
NOP
MOV Y,TI{REAL}
MOV X,T{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP84
JMP SKIP84
NSKIP84:
JMP 63830
NOP
SKIP84:
63835:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP85
JMP SKIP85
NSKIP85:
JMP 63760
NOP
SKIP85:
63840:
NOP
JSR GOSUB
JSR 39910
NOP
JMP RETURN
63850:
63852:
63854:
63856:
63858:
63860:
63862:
63864:
63866:
63868:
63870:
63872:
63874:
63876:
63878:
63880:
63882:
63884:
63886:
63888:
63890:
63900:
NOP
63910:
NOP
JMP RETURN
NOP
JSR END
RTS
